package bootstrap

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _bootstrap_readme_md = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\x41\x8f\xd4\x30\x0c\x85\xef\xf9\x15\x4f\x9a\x03\x97\x55\xf9\x09\x48\x1c\x90\xf6\x00\x27\xb4\x5c\x9b\x69\xdc\xad\x77\xd2\xb8\x4a\x9c\xad\x46\x88\xff\x8e\xdd\x59\x46\xc0\x9e\x32\x53\xdb\xef\x7d\xcf\x3e\xe1\xb3\x88\x36\xad\x71\x0b\xe1\xfb\x42\x8d\x10\x2b\x41\x17\xc2\xf9\x4f\x01\x6d\xaa\xbc\x69\xb3\xaf\x51\xd1\x16\xde\xb0\xb3\x2e\x47\x53\xa2\x39\xf6\xac\x18\x2f\xfd\xcc\x93\xd4\x32\x62\xab\x32\x73\xa6\x36\x84\xf0\x85\x28\x63\xae\x64\x82\x82\x98\x12\xae\xd2\x2b\x64\x2f\x0f\x90\x8a\x55\x12\xcf\x57\x97\x71\x57\x45\x2c\xf6\x87\x57\x1a\x0e\x92\xbb\xab\xf3\xd0\x3c\xd3\xa4\xfc\x4a\xf9\x8a\xdd\x29\x76\x42\xf7\xa9\x86\xd1\xde\x8a\x14\x35\x8e\xee\xc2\x85\x4d\x09\x4f\x5f\x43\x38\x9d\x4e\x78\x44\x21\x4a\x5e\x50\x5a\xb7\x1c\x95\x20\x5d\x21\xc5\xde\xf9\xcd\xfa\x5d\xd0\x10\xbe\x89\xa3\x22\x49\xf9\xa0\x03\x7e\x54\xb6\xb9\x73\x6c\x0b\x32\x5f\xcc\xd5\x33\x0e\xff\x18\xac\x62\x94\x0e\x61\x00\x56\xff\x5f\xf2\x06\xdd\x16\xe9\x39\xd9\x48\x92\x4f\x21\x3c\xce\x87\x47\xa5\x98\x2d\xd5\x14\x8b\x51\xd9\x8f\x67\x52\x58\x84\xb9\xca\xfa\xf7\x56\x63\x49\x28\xb2\x2f\xe4\xdb\xc8\x8d\x1e\x8e\x61\x9f\xf2\x3d\xf8\x29\xc6\xa7\x98\x3b\xb5\x9f\xbf\x46\x98\x75\x9f\xd4\x53\xdb\x7d\xd8\xb2\x4e\xbd\xa9\xe9\x5d\xe8\xfa\xf1\xd5\xbb\xb0\x45\xae\x6f\x07\xdd\x39\x67\x9c\xc9\xc0\x5f\x6c\xc7\x96\x85\x8b\xca\xed\x52\x37\xf8\xc1\xce\xc1\xed\xde\x17\x31\x49\x32\xc9\x25\x96\x67\xc3\x70\x30\xab\xda\x10\x95\x74\x5b\xb5\x35\xbd\x98\xe1\x21\x3f\xfc\x0e\x00\x00\xff\xff\x8c\x9a\x9e\x97\x62\x02\x00\x00")

func bootstrap_readme_md() ([]byte, error) {
	return bindata_read(
		_bootstrap_readme_md,
		"bootstrap/README.md",
	)
}

var _bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_master_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\x5f\x6f\x23\x35\x10\x7f\xf7\xa7\x18\xd2\x93\x8e\x4a\xe7\x75\x5b\x10\x48\x95\x8a\x74\x77\xf4\x21\x1c\xba\xab\xaa\x00\x2f\xbc\x38\xf6\x64\xd7\xac\xd7\xb6\xfc\x27\x6d\x04\xe5\xb3\x33\xf6\x6e\xaf\xa9\x38\x21\xde\x9a\x48\x89\x67\x3c\xfe\xcd\xbf\xdf\xcc\xc9\x57\xa2\xa4\x28\xb6\xc6\x09\x74\x7b\xd8\xca\x34\xb0\x84\x19\x38\x32\xa5\xe1\x6f\xc6\x4e\x80\xbf\xd0\x87\x5c\x6f\x06\x4c\x08\x7b\x69\x0b\x26\x90\x11\xc1\xb8\x3f\x50\x65\xd4\x74\xc8\x1e\xf2\x80\x90\x54\x34\x21\x77\xf0\x1b\x36\x03\xbc\x0f\xd6\x28\x93\xed\x01\x9c\xcf\x50\x92\x71\x3d\x48\xc8\x38\x05\x2b\x73\x15\xac\x74\x7d\x91\x3d\x02\x01\xcc\x70\x0d\x67\x76\x42\x3e\x65\xaa\x37\xe8\x94\x2f\xb1\x99\xd1\x65\x49\x18\xab\xd6\x9a\xc9\x34\x73\x13\xab\x0e\xfc\xee\x19\xb2\xef\x8d\x22\xcc\x6a\x40\x97\x3b\x63\x31\x75\xf0\xee\x00\x1a\x93\xe9\x1d\x48\x6b\x9f\x12\x58\x92\x4a\x83\x2f\x56\x93\xdb\x2d\xc5\xbf\xb5\x2d\x2a\x3a\xd6\x16\xc8\x0c\xb1\xb8\x6c\x26\x7c\x03\xd2\xe9\x39\xdb\x01\x09\x64\xce\x19\x22\x4a\x0b\x77\x3e\x8e\x1d\xac\x77\x70\xf0\x05\x1c\x12\xb2\xf2\x4e\x9b\x6c\xbc\xa3\xdb\x16\xd2\x1b\xb8\x8b\x26\x53\xf1\x72\x0d\xae\xb5\xf8\x04\x7c\x84\x49\x8e\xe4\x94\xca\x34\x50\x76\xc7\xc8\x1d\x3b\xa1\xef\xe6\xd3\x87\xeb\x8f\x57\xab\xf5\xc7\x9f\xae\xdf\x6f\xae\x7f\x6c\xe2\x8a\xdd\x7c\xba\xdd\x3c\x29\xab\xb4\x7a\x49\x8e\x30\x55\xa2\x05\x9e\x60\xc8\x39\xa4\x4b\x21\x82\x54\x23\xb5\x2d\x75\xca\xfa\xa2\xbb\xde\xfb\xde\x62\xa7\xfc\x24\x64\xc8\x42\x7b\x55\xff\xf9\x88\x87\xae\x0f\x3d\xfc\x05\xa9\x68\x0f\x8b\x0a\xa4\xd6\xc0\x59\xf6\x45\x0d\x20\x30\x37\x5b\x91\x88\x08\x8a\x00\xad\x49\xb9\xd3\x62\x2c\x5b\x8c\x0e\xf3\xa2\x61\x69\x00\xae\xe0\x35\xaa\xc1\xc3\x4a\xe3\xb6\x45\x42\x81\xd0\xd3\xee\xc8\xd6\x78\x01\x4f\x22\xbf\x47\x67\xa8\x3f\x93\x34\x6e\x05\x3f\xfc\x5f\x67\xaf\x19\xab\xa1\xf6\xc4\x8e\x12\xb4\xa4\x9e\xf2\xc3\x67\x8d\x71\x29\x57\x8a\xf1\x03\xfc\xce\x80\x3e\xc9\x2b\xe2\xd0\x7c\xc6\x6d\xae\xf4\x4a\x8b\x48\x75\x18\x31\x52\x50\x8b\x5c\x31\x72\x94\x2e\x05\x1f\x33\x6f\xb5\x5c\x6e\x6a\x04\x16\xf3\x91\x24\xf5\x74\x75\xde\x7d\xdf\x9d\xf1\xb3\xb3\x45\xdd\x6a\xcd\x4b\x36\x36\x31\xc6\xd2\x21\xd1\x54\xa8\x6c\x69\x8a\x1a\xa7\x67\x6f\x47\x7a\x0a\x34\xe6\x47\x35\xbb\xf9\xe5\xdd\xcf\xeb\xf7\xeb\x9b\xab\x57\x5f\xa3\xba\x98\x30\x4b\x4a\x4d\x12\xa7\x42\xd9\xd2\x30\x73\x13\xf6\xdf\x52\xa7\x54\xa1\xb5\xa4\x61\x45\x5f\xbe\x83\x8b\x53\x76\x73\xbb\xfe\xf5\xed\xe6\xba\x3d\x34\x3b\xa2\xfd\xce\xd4\x8e\xf6\x11\x03\xf0\xb7\x70\x0e\x98\x87\xb3\x47\x85\xa1\x2a\x1e\x81\x5c\xce\x20\xff\x82\x3d\x27\xcd\xbd\x8c\x7d\x3a\x65\x6c\x49\x96\xe6\x8c\xc6\xf1\xb3\x64\x1c\xcd\x11\xe7\x32\x18\x5a\x0a\x7b\x8c\x9c\x76\xa7\xe6\xb5\x6e\xf0\xea\xcf\x3a\x0f\x0f\x74\x9b\xfd\x88\x8e\xe4\x36\x34\x0f\xf0\xcc\x5e\x6a\xfa\xcd\x24\xd1\x49\x13\x76\xaa\xef\x96\x12\x3c\x3c\xb3\x54\x64\xc7\xf1\x9e\x1a\xc3\x13\xf5\xe6\x99\x1d\x9d\x1f\xd3\x7f\x60\x6d\x55\x4a\x37\x26\xf8\x80\x36\x11\x91\x2f\x4f\x5b\xbc\xb5\xd6\x32\x04\x3b\x33\x82\xd2\x5b\xb8\x49\x95\x4f\x5d\x88\xbe\xee\x22\x25\xa9\xc6\xbe\xf3\xb1\x17\xfb\x8b\xee\x1b\x41\x54\xaa\xdb\x8c\xb7\x1e\xe1\x31\x05\xc5\xc2\x30\x59\x97\x8b\x18\x7c\x7a\xbc\xa6\xb2\x88\xf3\xee\x3b\xb1\x40\x1d\xe4\x64\x67\x87\xbc\x05\x31\x37\xa6\x51\xfc\x08\x8c\x1e\x19\xd7\xd5\x4b\xc6\xa6\x51\xd3\x46\xe5\x01\x08\x75\x42\x51\xb6\xb4\xf7\x8a\x68\xe3\xc3\x54\xf8\x8f\xa7\x5f\x78\x20\x66\x7f\x8c\xe6\xf1\xce\x01\xbf\x85\xf9\xf2\x72\xfe\xfb\xc2\x83\x7f\x02\x00\x00\xff\xff\x97\x66\x54\x00\x03\x07\x00\x00")

func bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_master_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_master_sh,
		"bootstrap/amazon_k8s_1.7.0_ubuntu_16.04_master.sh",
	)
}

var _bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_node_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4d\x6f\xdc\x38\x0c\xbd\xeb\x57\x70\x67\x16\xc8\x25\xb2\xb3\xa7\x05\x16\xc8\x02\xfd\x98\x43\x5a\x34\x05\xda\x01\x7a\xe9\x45\x96\x18\x5b\xb1\x2c\x19\x12\x95\xc4\x68\xd3\xdf\x5e\x4a\x76\x93\xe9\xad\xb7\x78\x0e\x23\x3e\xd2\x8f\x8f\xe2\xf3\xfe\xaf\x36\xa7\xd8\x76\xd6\xb7\xe8\xef\xa0\x53\x69\x10\x09\x09\x24\x0a\x6d\xe0\x87\x10\x7b\x90\x2f\xf4\x70\xeb\xe3\x80\x09\xe1\x4e\xb9\x8c\x09\x54\x44\xb0\xfe\x16\x35\xa1\xe1\x03\x05\xa0\x01\x21\xe9\x68\x67\x6a\xe0\x0b\xd6\x02\x7c\x98\x9d\xd5\x96\xdc\x02\x3e\x10\xe4\x64\x7d\x0f\x0a\x08\xa7\xd9\x29\x2a\x81\x53\xbe\xcf\xaa\x47\x60\x82\x95\xae\xf2\xac\x4d\xb8\xa7\x4a\x25\x83\x5e\x87\x1c\x6b\x19\x27\x73\xc2\x58\x50\x67\x27\x5b\xcb\x6d\x2c\x18\x84\x9b\xdf\x98\x43\x6f\x35\x73\x96\x02\x4e\xde\x58\x87\xa9\x81\xd7\x0b\x18\x4c\xb6\xf7\xa0\x9c\x7b\x1e\x60\x1b\x2a\x0d\x21\x3b\xc3\x6d\x3b\xd6\xdf\xb9\xaa\x8a\x8f\x65\x05\x8a\x20\x66\x4f\x76\xc2\x73\x50\xde\xac\xd3\x0e\xc8\x24\xeb\xcc\x10\x51\x39\xb8\x0f\x71\x6c\xe0\xea\x06\x96\x90\xc1\x23\x33\xeb\xe0\x8d\x25\x1b\x3c\x67\xab\xa4\x73\xb8\x8f\x96\xf8\xf2\xa8\x88\xab\x2b\xde\x43\x88\x30\xa9\x91\x9b\xf2\x35\x0d\x3c\xdd\x29\x73\x23\xf6\xfc\x3b\x7e\x7c\x7f\xb8\xbe\xdc\x5d\x5d\xbf\x3b\xbc\x39\x1e\xde\xd6\x70\x27\x3e\xbc\xfa\x7c\x3c\x7c\x7a\x86\xd7\x78\xf7\x92\x3e\x11\x3a\x47\x07\x32\xc1\x40\x34\xa7\xff\xda\x76\x56\x7a\xe4\xd5\xa5\x46\xbb\x90\x4d\xd3\x87\xd0\x3b\x6c\x74\x98\x5a\x35\x53\x6b\x82\x2e\xff\x72\xc4\xa5\xe9\xe7\x1e\xbe\x43\xca\x26\xc0\x06\x81\x32\x06\xa4\xa0\x90\xf5\x00\x2d\x52\xad\x6d\x13\x9b\x41\x33\xa1\xb3\x89\x1a\xd3\x8e\xb9\xc3\xe8\x91\x36\x44\xa4\x01\xa4\x86\x33\xd4\x43\x80\x9d\xc1\xae\x2a\x61\x21\xfc\x6a\x73\x52\x6b\x43\x0b\xcf\xa1\x7c\x40\x6f\x79\x47\x93\xb2\x7e\x07\xff\xff\x69\xb3\x33\x21\x8a\xd4\x9e\x1d\x92\x67\xa3\x78\xaf\x72\x79\x42\xac\x4f\x54\x6c\x26\x17\xf8\x2a\x80\x9f\x14\x34\xfb\x68\x3d\x63\x47\xc5\x62\x69\x0b\xf9\x1e\x46\x8c\x2c\x6a\x8b\x0b\x07\x45\xe5\xd3\x1c\x22\xc9\x7a\x97\x5b\xa6\x28\x70\x48\x27\x91\x32\xd3\xe5\x3f\xcd\xbf\xcd\x85\xbc\xb8\x10\x22\x2d\x89\x3f\x03\x4d\x8e\x3f\x9b\x6a\xe2\x95\xfa\x04\x67\x55\x91\x7e\xc1\x62\x63\x60\x03\xb3\xcf\x9f\xa2\xdb\xc0\xee\x94\x92\xc2\x88\x1e\xfe\xfe\x56\xfd\xf6\xc8\x87\xd5\x61\x8f\x3f\x03\x00\x00\xff\xff\x23\x59\x14\x94\xaa\x04\x00\x00")

func bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_node_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_node_sh,
		"bootstrap/amazon_k8s_1.7.0_ubuntu_16.04_node.sh",
	)
}

var _bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_master_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\x5f\x6f\x23\x35\x10\x7f\xf7\xa7\x18\xd2\x93\x8e\x4a\xe7\x75\x5b\x10\x48\x95\x8a\x74\x77\xf4\x21\x1c\xba\xab\xaa\x00\x2f\xbc\x38\xf6\x64\xd7\xac\xd7\xb6\xfc\x27\x6d\x04\xe5\xb3\x33\xf6\x6e\xaf\xa9\x38\x21\xde\x9a\x48\x89\x67\x3c\xfe\xcd\xbf\xdf\xcc\xc9\x57\xa2\xa4\x28\xb6\xc6\x09\x74\x7b\xd8\xca\x34\xb0\x84\x19\x38\x32\xa5\xe1\x6f\xc6\x4e\x80\xbf\xd0\x87\x5c\x6f\x06\x4c\x08\x7b\x69\x0b\x26\x90\x11\xc1\xb8\x3f\x50\x65\xd4\x74\xc8\x1e\xf2\x80\x90\x54\x34\x21\x77\xf0\x1b\x36\x03\xbc\x0f\xd6\x28\x93\xed\x01\x9c\xcf\x50\x92\x71\x3d\x48\xc8\x38\x05\x2b\x73\x15\xac\x74\x7d\x91\x3d\x02\x01\xcc\x70\x0d\x67\x76\x42\x3e\x65\xaa\x37\xe8\x94\x2f\xb1\x99\xd1\x65\x49\x18\xab\xd6\x9a\xc9\x34\x73\x13\xab\x0e\xfc\xee\x19\xb2\xef\x8d\x22\xcc\x6a\x40\x97\x3b\x63\x31\x75\xf0\xee\x00\x1a\x93\xe9\x1d\x48\x6b\x9f\x12\x58\x92\x4a\x83\x2f\x56\x93\xdb\x2d\xc5\xbf\xb5\x2d\x2a\x3a\xd6\x16\xc8\x0c\xb1\xb8\x6c\x26\x7c\x03\xd2\xe9\x39\xdb\x01\x09\x64\xce\x19\x22\x4a\x0b\x77\x3e\x8e\x1d\xac\x77\x70\xf0\x05\x1c\x12\xb2\xf2\x4e\x9b\x6c\xbc\xa3\xdb\x16\xd2\x1b\xb8\x8b\x26\x53\xf1\x72\x0d\xae\xb5\xf8\x04\x7c\x84\x49\x8e\xe4\x94\xca\x34\x50\x76\xc7\xc8\x1d\x3b\xa1\xef\xe6\xd3\x87\xeb\x8f\x57\xab\xf5\xc7\x9f\xae\xdf\x6f\xae\x7f\x6c\xe2\x8a\xdd\x7c\xba\xdd\x3c\x29\xab\xb4\x7a\x49\x8e\x30\x55\xa2\x05\x9e\x60\xc8\x39\xa4\x4b\x21\x82\x54\x23\xb5\x2d\x75\xca\xfa\xa2\xbb\xde\xfb\xde\x62\xa7\xfc\x24\x64\xc8\x42\x7b\x55\xff\xf9\x88\x87\xae\x0f\x3d\xfc\x05\xa9\x68\x0f\x8b\x0a\xa4\xd6\xc0\x59\xf6\x45\x0d\x20\x30\x37\x5b\x91\x88\x08\x8a\x00\xad\x49\xb9\xd3\x62\x2c\x5b\x8c\x0e\xf3\xa2\x61\x69\x00\xae\xe0\x35\xaa\xc1\xc3\x4a\xe3\xb6\x45\x42\x81\xd0\xd3\xee\xc8\xd6\x78\x01\x4f\x22\xbf\x47\x67\xa8\x3f\x93\x34\x6e\x05\x3f\xfc\x5f\x67\xaf\x19\xab\xa1\xf6\xc4\x8e\x12\xb4\xa4\x9e\xf2\xc3\x67\x8d\x71\x29\x57\x8a\xf1\x03\xfc\xce\x80\x3e\xc9\x2b\xe2\xd0\x7c\xc6\x6d\xae\xf4\x4a\x8b\x48\x75\x18\x31\x52\x50\x8b\x5c\x31\x72\x94\x2e\x05\x1f\x33\x6f\xb5\x5c\x6e\x6a\x04\x16\xf3\x91\x24\xf5\x74\x75\xde\x7d\xdf\x9d\xf1\xb3\xb3\x45\xdd\x6a\xcd\x4b\x36\x36\x31\xc6\xd2\x21\xd1\x54\xa8\x6c\x69\x8a\x1a\xa7\x67\x6f\x47\x7a\x0a\x34\xe6\x47\x35\xbb\xf9\xe5\xdd\xcf\xeb\xf7\xeb\x9b\xab\x57\x5f\xa3\xba\x98\x30\x4b\x4a\x4d\x12\xa7\x42\xd9\xd2\x30\x73\x13\xf6\xdf\x52\xa7\x54\xa1\xb5\xa4\x61\x45\x5f\xbe\x83\x8b\x53\x76\x73\xbb\xfe\xf5\xed\xe6\xba\x3d\x34\x3b\xa2\xfd\xce\xd4\x8e\xf6\x11\x03\xf0\xb7\x70\x0e\x98\x87\xb3\x47\x85\xa1\x2a\x1e\x81\x5c\xce\x20\xff\x82\x3d\x27\xcd\xbd\x8c\x7d\x3a\x65\x6c\x49\x96\xe6\x8c\xc6\xf1\xb3\x64\x1c\xcd\x11\xe7\x32\x18\x5a\x0a\x7b\x8c\x9c\x76\xa7\xe6\xb5\x6e\xf0\xea\xcf\x3a\x0f\x0f\x74\x9b\xfd\x88\x8e\xe4\x36\x34\x0f\xf0\xcc\x5e\x6a\xfa\xcd\x24\xd1\x49\x13\x76\xaa\xef\x96\x12\x3c\x3c\xb3\x54\x64\xc7\xf1\x9e\x1a\xc3\x13\xf5\xe6\x99\x1d\x9d\x1f\xd3\x7f\x60\x6d\x55\x4a\x37\x26\xf8\x80\x36\x11\x91\x2f\x4f\x5b\xbc\xb5\xd6\x32\x04\x3b\x33\x82\xd2\x5b\xb8\x49\x95\x4f\x5d\x88\xbe\xee\x22\x25\xa9\xc6\xbe\xf3\xb1\x17\xfb\x8b\xee\x1b\x41\x54\xaa\xdb\x8c\xb7\x1e\xe1\x31\x05\xc5\xc2\x30\x59\x97\x8b\x18\x7c\x7a\xbc\xa6\xb2\x88\xf3\xee\x3b\xb1\x40\x1d\xe4\x64\x67\x87\xbc\x05\x31\x37\xa6\x51\xfc\x08\x8c\x1e\x19\xd7\xd5\x4b\xc6\xa6\x51\xd3\x46\xe5\x01\x08\x75\x42\x51\xb6\xb4\xf7\x8a\x68\xe3\xc3\x54\xf8\x8f\xa7\x5f\x78\x20\x66\x7f\x8c\xe6\xf1\xce\x01\xbf\x85\xf9\xf2\x72\xfe\xfb\xc2\x83\x7f\x02\x00\x00\xff\xff\x97\x66\x54\x00\x03\x07\x00\x00")

func bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_master_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_master_sh,
		"bootstrap/digitalocean_k8s_1.7.0_ubuntu_16.04_master.sh",
	)
}

var _bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_node_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4f\x6f\xd4\x3e\x10\xbd\xe7\x53\xcc\x6f\xf7\x27\xf5\x52\x27\xe5\x84\x84\x54\x24\xfe\xec\xa1\x20\x8a\x04\x2b\x71\xe1\xe2\xd8\xb3\x89\x1b\xc7\x8e\xec\x71\xdb\x08\xca\x67\x67\xec\xa4\xda\x2d\x5c\xb8\x35\x7b\x58\xcf\x3c\xfb\xcd\x1b\xcf\xf3\xf6\xbf\x26\xc5\xd0\xb4\xc6\x35\xe8\x6e\xa1\x95\xb1\xaf\x22\x12\x08\xac\x94\x86\x5f\x55\xb5\x05\xf1\x4c\x1f\x97\xde\xf7\x18\x11\x6e\xa5\x4d\x18\x41\x06\x04\xe3\x6e\x50\x11\x6a\x5e\x90\x07\xea\x11\xa2\x0a\x66\xa2\x1a\xbe\x61\xd9\x80\xf7\x93\x35\xca\x90\x9d\xc1\x79\x82\x14\x8d\xeb\x40\x02\xe1\x38\x59\x49\x39\xb0\xd2\x75\x49\x76\x08\x4c\xb0\xd0\x15\x9e\xa5\x08\xd7\x94\x31\x23\xe8\x94\x4f\xa1\x6c\x63\x30\x45\x0c\x39\x6b\xcd\x68\xca\x76\x13\x72\x0e\xfc\xe1\x09\xb3\xef\x8c\x62\xce\xbc\x81\xc1\x83\xb1\x18\x6b\x78\x3b\x83\xc6\x68\x3a\x07\xd2\xda\x63\x03\x6b\x53\xb1\xf7\xc9\x6a\x2e\xdb\xb2\xfe\xd6\x16\x55\xbc\xcc\x23\x90\x04\x21\x39\x32\x23\x9e\x83\x74\x7a\xe9\xb6\x47\x26\x59\x7a\x86\x80\xd2\xc2\x9d\x0f\x43\x0d\x57\x07\x98\x7d\x02\x87\xcc\xac\xbc\xd3\x86\x8c\x77\x8c\x16\x49\xe7\x70\x17\x0c\xf1\xe5\x51\x16\x57\x46\xbc\x05\x1f\x60\x94\x03\x17\xe5\x6b\xea\xb9\xbb\x53\xe6\xba\xda\xf2\x6f\xff\xf9\xe3\xee\xfa\x72\x73\x75\xfd\x61\xf7\x6e\xbf\x7b\x5f\xc2\x4d\xf5\xe9\xcd\xd7\xfd\xee\xcb\x31\xbd\xc4\x9b\xe7\xf4\x49\x15\x93\xf6\xa0\x52\xb0\x20\x22\xf4\x44\x53\x7c\xd5\x34\x93\x54\x03\xcf\x2f\xd6\xca\xfa\xa4\xeb\xce\xfb\xce\x62\xad\xfc\xd8\xc8\x89\x1a\xed\x55\xfe\x17\x03\xce\x75\x37\x75\xf0\x13\x0a\xc9\x9a\x02\xa9\x35\x88\x85\x97\x7c\x52\x3d\x34\x48\xe5\x40\x13\xd9\x16\x8a\x59\xad\x89\x54\xeb\x66\x48\x2d\x06\x87\xb4\x66\x96\x23\xb1\x07\xa1\xe0\x0c\x55\xef\x61\xa3\xb1\x2d\x9a\x58\x12\x9f\xaf\x4f\x0e\x18\xdf\xc0\x31\x14\xf7\xe8\x0c\x8f\x6c\x94\xc6\x6d\xe0\xf5\xbf\x56\x3c\x5b\xdb\xcf\xca\x3b\x76\x4d\x9a\xb4\xe4\x59\x8b\xf9\x69\xda\xb8\x48\xd9\x7f\x62\x86\xef\x15\xf0\x17\xbd\x62\x83\x2d\x6b\x6c\x29\x7b\x2f\xae\x21\xdf\xcd\x80\x81\xe5\xad\x71\xe6\xa0\x20\x5d\x9c\x7c\x20\x51\xee\x77\x45\xb2\x16\x8b\x74\x12\x49\x3d\x5e\xbe\xa8\x5f\xd6\x17\xe2\xe2\x62\x55\x16\xe7\xc8\x8f\x44\x91\xe5\x47\x55\x2c\xbe\xf0\xff\x09\xb2\xbe\x40\x8f\xd8\x02\x8a\xdd\x23\x27\x7b\x9d\x9f\xc4\x5f\xd9\x1b\xcf\x86\x16\x82\xfc\x80\x0e\xfe\xff\x51\x2c\xfa\xc0\x8b\xc5\x94\x0f\xbf\x03\x00\x00\xff\xff\x90\x8a\x8f\xe1\xdd\x04\x00\x00")

func bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_node_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_node_sh,
		"bootstrap/digitalocean_k8s_1.7.0_ubuntu_16.04_node.sh",
	)
}

var _bootstrap_inject_go = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3f\x0b\x83\x30\x10\x47\x67\xef\x53\x1c\x4e\x06\x42\xa1\x6b\xa1\x5b\x97\xae\x5d\xc5\xe1\x4c\x4f\xb1\x6a\x12\x2e\xb1\x50\x8a\xdf\xbd\xf1\x5f\xa7\x10\x7e\xef\x3d\xce\x93\xe9\xa9\x65\xac\x9d\x8b\x21\x0a\x79\x80\x6e\xf4\x4e\x22\xe6\xe9\xdb\xd9\x36\xe4\x00\xcd\x64\x0d\xde\xed\x8b\x4d\x2c\x9e\x14\x09\xcb\xaa\xfe\x44\xd6\xf8\xa6\x61\xe2\x80\x23\xf9\x72\xa3\xab\xed\x51\x58\x1c\x08\x8b\x38\x51\xf8\x85\x2c\x4d\xb7\x45\xbe\x5c\x71\xa3\xd6\x96\x82\xac\x71\x82\x7d\x8a\x2d\x8b\x90\x4d\xd7\xec\xdd\x24\xfd\xad\x43\x0a\xa7\x07\xfb\x81\x0c\x17\xfb\xa2\x57\x57\xe3\x39\x95\x66\xc8\x84\xe3\x24\x76\xbf\xf0\x60\x94\x46\xdb\x0d\x30\xc3\x2f\x00\x00\xff\xff\x3b\x57\x73\x5c\xef\x00\x00\x00")

func bootstrap_inject_go() ([]byte, error) {
	return bindata_read(
		_bootstrap_inject_go,
		"bootstrap/inject.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"bootstrap/README.md": bootstrap_readme_md,
	"bootstrap/amazon_k8s_1.7.0_ubuntu_16.04_master.sh": bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_master_sh,
	"bootstrap/amazon_k8s_1.7.0_ubuntu_16.04_node.sh": bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_node_sh,
	"bootstrap/digitalocean_k8s_1.7.0_ubuntu_16.04_master.sh": bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_master_sh,
	"bootstrap/digitalocean_k8s_1.7.0_ubuntu_16.04_node.sh": bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_node_sh,
	"bootstrap/inject.go": bootstrap_inject_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bootstrap": &_bintree_t{nil, map[string]*_bintree_t{
		"README.md": &_bintree_t{bootstrap_readme_md, map[string]*_bintree_t{
		}},
		"amazon_k8s_1.7.0_ubuntu_16.04_master.sh": &_bintree_t{bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_master_sh, map[string]*_bintree_t{
		}},
		"amazon_k8s_1.7.0_ubuntu_16.04_node.sh": &_bintree_t{bootstrap_amazon_k8s_1_7_0_ubuntu_16_04_node_sh, map[string]*_bintree_t{
		}},
		"digitalocean_k8s_1.7.0_ubuntu_16.04_master.sh": &_bintree_t{bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_master_sh, map[string]*_bintree_t{
		}},
		"digitalocean_k8s_1.7.0_ubuntu_16.04_node.sh": &_bintree_t{bootstrap_digitalocean_k8s_1_7_0_ubuntu_16_04_node_sh, map[string]*_bintree_t{
		}},
		"inject.go": &_bintree_t{bootstrap_inject_go, map[string]*_bintree_t{
		}},
	}},
}}
